name: Runner PullRequestsExtractor

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Runner BreaksIdentification", "Trigger Second run PullRequestsExtractor"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.name == 'Runner BreaksIdentification') || (github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.name == 'Trigger Second run PullRequestsExtractor') }}
    steps:
    - name: Checkout main repo
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x   
        
    - name: Clone repository developersInactivityAnalysis
      run: |
        git clone -b tubvic https://github.com/domenico-77/developersInactivityAnalysis.git
        cd developersInactivityAnalysis
      
      
    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('developersInactivityAnalysis/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install Python dependencies
      run: 
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check if there are running PullRequestsExtractor and recover files
      run: | 
        mkdir -p developersInactivityAnalysis/logs
        mkdir -p developersInactivityAnalysis/Organizations
          
        if [ -f "support/Activities_Extraction_${{ vars.OWNER }}.log" ]; then
           echo "There is already a running, recovering files..."
           mv support/Activities_Extraction_${{ vars.OWNER }}.log developersInactivityAnalysis/logs
           mv support/${{ vars.OWNER }} developersInactivityAnalysis/Organizations
        else 
           echo "This is the first execution."
           cp -r output/${{ vars.OWNER }} developersInactivityAnalysis/Organizations         
        fi

    - name: Run Python script PullRequestsExtractor.py
      env:
         MY_SECRET: ${{ secrets.TOKEN }}
      run: python3 developersInactivityAnalysis/Extractors/PullRequestsExtractor.py ${{ vars.OWNER }}/${{ vars.REPO }} $MY_SECRET
      timeout-minutes: 340
      
    - name: Save temporary data to backup folder
      if: ${{ failure() }} 
      run: |  
        mkdir -p support
        mv developersInactivityAnalysis/logs/Activities_Extraction_${{ vars.OWNER }}.log support
        mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} support
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add support
        git commit -m "Added support/${{ vars.OWER }} and support/Activities_Extraction_${{ vars.OWNER }}.log"
        git push


    - name: Move CSV file to main repository
      run: |
         rm -r output/${{ vars.OWNER }}
         if [ -f "output/Activities_Extraction_${{ vars.OWNER }}.log" ]; then
           rm output/Activities_Extraction_${{ vars.OWNER }}.log
           mv developersInactivityAnalysis/logs/Activities_Extraction_${{ vars.OWNER }}.log output
           mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} output       
         else
           mv developersInactivityAnalysis/logs/Activities_Extraction_${{ vars.OWNER }}.log output
           mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} output
         fi

    - name: Commit changes
      run: |        
        git config --local user.name "${{ vars.NAME }}"
        git config --local user.email "${{ vars.EMAIL }}"
        git pull
        git add output
        git commit -m "End of extraction, saving Activities_Extraction_${{ vars.OWNER }}.log and /${{ vars.OWNER }} in output"
        git push

name: Runner LocalNonDocCommitExtractor

on:
  workflow_dispatch:
 # schedule:
 #   - cron: '0 0 1 * *'
# Perform the action every first day of the month at 00:00

jobs:
  build:
    runs-on: ubuntu-latest

    
        
    steps:
    - name: Checkout main repo
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x   
        
    - name: Clone repository developersInactivityAnalysis
      run: |
        git clone -b tubvic https://github.com/domenico-77/developersInactivityAnalysis.git
        cd developersInactivityAnalysis
      
      
    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('developersInactivityAnalysis/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install Python dependencies
      run: 
        python -m pip install --upgrade pip
        pip install -r requirements.txt


    - name: Check if there have been other LocalNonDocCommitExtractor executions and recover files
      run: | 
        mkdir -p output
        mkdir -p support
        if [ -z "$(find output/${{ vars.REPO }} -mindepth 1 -maxdepth 1)" ]; then
           echo "This is the first execution."
        else
           echo "There have been other executions, file recovery..."
           mkdir -p developersInactivityAnalysis/A80_Results/${{ vars.REPO }}
           mv output/${{ vars.REPO }}/commits.csv developersInactivityAnalysis/A80_Results/${{ vars.REPO }}
        fi

    - name: Run Python script
      run: python3 developersInactivityAnalysis/CoreSelection/LocalNonDocCommitExtractor.py https://github.com/${{ vars.OWNER }}/${{ vars.REPO }}.git
      timeout-minutes: 340
      
    - name: Save temporary data to support folder
      if: ${{ failure() }} #si avvia solo se quello di prima Ã¨ stato interrotto
      run: |  
        if [ -d "support/${{ vars.REPO }}" ]; then
          rm -r support/${{ vars.REPO }}
        else
          echo "Directory 'support/${{ vars.REPO }}' doesn't exist."
        fi
        mv developersInactivityAnalysis/A80_Results/${{ vars.REPO }} support
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add support/${{ vars.REPO }}
        git commit -m "Added ${{ vars.REPO }} in support"
        git push


    - name: Move CSV file to main repository
      env:
        REPO: ${{ env.REPO }}
      run: | 
        if [ -z "$(find output/${{ vars.REPO }} -mindepth 1 -maxdepth 1)" ]; then
           mv developersInactivityAnalysis/A80_Results/${{ vars.REPO }} output
        else
           rm -r output/${{ vars.REPO }}
           mv developersInactivityAnalysis/A80_Results/${{ vars.REPO }} output
        fi
        if [ -z "$(find support/${{ vars.REPO }} -mindepth 1 -maxdepth 1)" ]; then
           echo "support empty"
        else
            rm -r support/${{ vars.REPO }}
        fi    

    - name: Commit changes
      run: |        
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add output/${{ vars.REPO }}
        git commit -m "Finished LocalNonDocCommitExtractor, added ${{ vars.REPO }} in output"
        git push

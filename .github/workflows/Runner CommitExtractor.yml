name: Runner CommitExtractor

on:
  workflow_run:
    workflows: ["Runner LocalNonDocCommitExtractor", "Secondo avvio LocalNonDocCommitExtractor"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout main repo
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x   
        
    - name: Clone repository developersInactivityAnalysis
      run: |
        git clone -b tubvic https://github.com/domenico-77/developersInactivityAnalysis.git
        cd developersInactivityAnalysis
      
      
    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('developersInactivityAnalysis/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install Python dependencies
      run: 
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Controlla se ci sono state altre esecuzioni di CommitExtractor e recupera i file
      run: | 
        if [ -z "$(find output/github -mindepth 1 -maxdepth 1)" ]; then
           echo "Questa è la prima esecuzione."
        else
           echo "Ci sono state altre esecuzioni, recupero i file..."
           mkdir -p developersInactivityAnalysis/logs
           mkdir -p developersInactivityAnalysis/Organizations
           mv output/Commit_Extraction_github.log developersInactivityAnalysis/logs
           mv output/github developersInactivityAnalysis/Organizations 
        fi

    - name: Run Python script CommitExtractor.py
      run: python3 developersInactivityAnalysis/Extractors/CommitExtractor.py github-linguist/linguist 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
      timeout-minutes: 340
      
    - name: Salva i dati temporanei nella cartella di appoggio
      if: ${{ failure() }} #si avvia solo se quello di prima è stato interrotto
      run: |  
        mv developersInactivityAnalysis/logs/Commit_Extraction_github.log appoggio
        mv developersInactivityAnalysis/Organizations/github appoggio
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git add appoggio
        git commit -m "Aggiunti appoggio/github e appoggio/Commit_Extraction_github.log"
        git push


    - name: Move CSV file to main repository
      run: | 
        if [ -z "$(find output/github -mindepth 1 -maxdepth 1)" ]; then
           mv developersInactivityAnalysis/logs/Commit_Extraction_github.log output
           mv developersInactivityAnalysis/Organizations/github output
        else
           rm -r output/github
           rm output/Commit_Extraction_github.log
           mv developersInactivityAnalysis/logs/Commit_Extraction_github.log output
           mv developersInactivityAnalysis/Organizations/github output
        fi

    - name: Commit changes
      run: |        
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add output
        git commit -m "Fine estrazione, salvataggio di Commit_Extraction_github.log e /github in output"
        git push

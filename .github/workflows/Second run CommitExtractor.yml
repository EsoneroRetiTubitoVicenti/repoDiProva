name: Second run CommitExtractor
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Runner CommitExtractor"]
    types:
      - completed

jobs:
  job_name:
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'failure' }}

    steps:
    - name: Checkout main repo
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x   
        
    - name: Clone repository developersInactivityAnalysis
      run: |
        git clone -b tubvic https://github.com/domenico-77/developersInactivityAnalysis.git
        cd developersInactivityAnalysis
      
      
    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('developersInactivityAnalysis/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install Python dependencies
      run: 
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: move from support to developersInactivityAnalysis
      run: |
         mkdir -p developersInactivityAnalysis/logs
         mkdir -p developersInactivityAnalysis/Organizations
         mv support/Commit_Extraction_${{ vars.OWNER }}.log developersInactivityAnalysis/logs
         mv support/${{ vars.OWNER }} developersInactivityAnalysis/Organizations
      
    - name: Run Python script
      env:
         MY_SECRET: ${{ secrets.TOKEN }}
      run: python3 developersInactivityAnalysis/Extractors/CommitExtractor.py ${{ vars.OWNER }}/${{ vars.REPO }} $MY_SECRET
      timeout-minutes: 340
      
    - name: Save temporary data to support folder
      if: ${{ failure() }}
      run: |  
        mkdir -p support
        if [ -z "$(find support/${{ vars.OWNER }} -mindepth 1 -maxdepth 1)" ]; then
          echo "directory 'support/${{ vars.OWNER }}' doesn't exist."
        else
          rm -r support/${{ vars.OWNER }}
          rm support/Commit_Extraction_${{ vars.OWNER }}.log
        fi
        mv developersInactivityAnalysis/logs/Commit_Extraction_${{ vars.OWNER }}.log support
        mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} support
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add support
        git commit -m "Uploaded support/${{ vars.OWNER }} and support/Commit_Extraction_${{ vars.OWNER }}.log"
        git push


    - name: Move CSV file to main repository
      run: |
        if [ -z "$(find output/${{ vars.OWNER }} -mindepth 1 -maxdepth 1)" ]; then
           echo "output empty"
        else
           rm -r output/${{ vars.OWNER }}
        fi
        
        if [ -f "output/Commit_Extraction_${{ vars.OWNER }}.log" ]; then  
           rm output/Commit_Extraction_${{ vars.OWNER }}.log          
           mv developersInactivityAnalysis/logs/Commit_Extraction_${{ vars.OWNER }}.log output
           mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} output
        else          
           mv developersInactivityAnalysis/logs/Commit_Extraction_${{ vars.OWNER }}.log output
           mv developersInactivityAnalysis/Organizations/${{ vars.OWNER }} output
        fi


    - name: Commit changes
      run: |        
        git config --local user.name "domenico-77"
        git config --local user.email "d.vicenti1@studenti.uniba.it"
        git pull
        git add output
        git commit -m "End of extraction, saving Commit_Extraction_${{ vars.OWNER }}.log and /${{ vars.OWNER }} in output"
        git push
